## HTTP configuration ##

server { 
	
	# Your server IP address and domain
	listen XXX.XXX.XXX.XXX:80;
	server_name  RADIUSdesk.domain.example.com;
	
	#The .well-known directory alias for Let's Encrypt certificate renewals (used in this conf)
	location /.well-known/acme-challenge/ {
            allow all;
            default_type text/plain;
			alias //usr/share/nginx/html/.well-known/acme-challenge/;          
	}
	
	#Rewrite http to https
	location / {
	rewrite     ^   https://$host$request_uri? permanent;
	}

}

## Local host - backend for SSL proxy ##

server {
	
	# Http listen on local port 1080 as backend for SSL proxy
	listen 127.0.0.1:1080;
	
	#Your server domain
	server_name  RADIUSdesk.domain.example.com;


# Root for  RADIUSdesk #

	root /usr/share/nginx/html;

	# Add index.php to the list if you are using PHP
	index index.php index.html index.htm;
	
	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}

	# Pass PHP scripts to FastCGI server
	location ~ \.php$ {
		include snippets/fastcgi-php.conf;
	
		# With php-fpm (or other unix sockets):
		fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
	}

	
	# Deny access to .htaccess files, if Apache's document root concurs with nginx's one
	location ~ /\.ht {
		deny all;
	}

# Locations for RADIUSdesk #

	location ~ ^/cake2/.+\.(jpg|jpeg|gif|png|ico|js|css)$ {
		rewrite ^/cake2/rd_cake/webroot/(.*)$ /cake2/rd_cake/webroot/$1 break;
		rewrite ^/cake2/rd_cake/(.*)$ /cake2/rd_cake/webroot/$1 break;
		access_log off;
		expires max;
		add_header Cache-Control public;
	}

	location /cake2/rd_cake {
		rewrite ^/cake2/rd_cake/(.*)$ /cake2/rd_cake/webroot/$1 break;
		try_files $uri $uri/ /cake2/rd_cake/webroot/index.php?q=$uri&$args;
	}
 
	location /cake3/rd_cake {
		rewrite ^/cake3/rd_cake(.+)$ /cake3/rd_cake/webroot$1 break;
	try_files $uri $uri/ /cake3/rd_cake/index.php$is_args$args;
	}
}


### SSL configuration ###

server {
    
	# Your server IP address and domain
	listen XXX.XXX.XXX.XXX:443 ssl http2;
	server_name RADIUSdesk.domain.example.com;
  
	#Only requests to our host are allowed
        if ($host !~ ^(RADIUSdesk.domain.example.com)$ ) {
        return 444;
        }	

  #SSL Certificate eg. Let's Encrypt    
	ssl_certificate /etc/letsencrypt/live/RADIUSdesk.domain.example.com/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/RADIUSdesk.domain.example.com/privkey.pem;
	
	#Allowed protocols and encryption 
	ssl on;
        ssl_protocols	TLSv1.2;
        ssl_prefer_server_ciphers	on;
		    ssl_ciphers                     'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
        keepalive_timeout               60;
        ssl_session_cache		shared:SSL:10m;
        ssl_session_timeout		10m;
	
	#Acces log file
        access_log			/var/log/nginx/rd.access.log;


## Pass requests for RADIUSdesk content to backend i.e. localhost ##

	location / {
	
		# Uncomment those two lines below to restrict access to RADIUSdesk from defined IP range - XXX.XXX.XXX.XXX/24
		#	allow XXX.XXX.XXX.XXX/24;
		# deny all;

		# proxying 
		proxy_pass  http://127.0.0.1:1080;
		proxy_redirect  http://127.0.0.1:1080    https://$host;
		
		# force timeouts
    proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;

   # Set headers 
   include			proxy_params;
   proxy_set_header        Accept-Encoding   "";
   add_header              Front-End-Https   on;
   proxy_buffering         off;
   proxy_redirect          off;
	}
	
	location /rd/ {
		# Uncomment those two lines below to restrict access to RADIUSdesk from defined IP range - XXX.XXX.XXX.XXX/24
		# allow XXX.XXX.XXX.XXX/24;
		# deny all;
        
		# proxying 		
		proxy_pass  http://127.0.0.1:1080;
        proxy_redirect  http://127.0.0.1:1080    https://$host;
		
		# force timeouts
    proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;

    # Set headers
    include                 proxy_params;
    proxy_set_header        Accept-Encoding   "";
    add_header              Front-End-Https   on;
    proxy_buffering         off;
    proxy_redirect          off;
        }

}
